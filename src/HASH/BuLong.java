package HASH;
//布隆过滤器
//爬虫去重问题，黑名单问题
/*
* 假设有一个100亿个url在黑名单上，
* 搜索在搜索的时候url不进行显示
* 假设一个链接是64个字节，当用户搜索黑名之中的内容的时候
* 需要返回true(在黑名单之中)或者false
*
* 布隆过滤器存在失误率，这个失误类型是就是一个东西是白名单但是我们也把他
* 当成了黑名单，这是一种宁可错杀3000不肯放过一个的问题
* */

//算法思想
//准备一个数组，0-m-1，每一个元素是一个bit
//url经过hash函数，算出一个hash值，hash值模m，准备多个hash函数
//我们的url使用多个不同的哈希函数生成多个哈希值，将对应的位上修改位为1
//因为不同的字符串可能会映射到相同位，所以一个字符串只能说明它可能存在，而不能说它是绝对存在
//所以说这个也会返回true，这就是宁可错杀1000也不会放过1个。
public class BuLong {
    public static void main(String[]args)
    {
        //一个字节8bit，一个int4字节，所以一个整性可以表示32个bit，所以长度为1000的数组可以表示32000个bit
        int[] arr = new int[1000];
        //假设我们要将30000进行描黑
        int index = 30000;
        //我们需要先定位这个bit属于哪一个整数
        int intIndex = index/32;
        int bitIndex = index%32;//30000%32代表的是桶之中哪一个bit被描黑
        //然后我们需要修改位
        arr[intIndex] = (arr[intIndex] | (1<<bitIndex));
    }
}

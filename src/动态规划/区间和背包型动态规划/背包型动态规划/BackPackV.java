package 动态规划.区间和背包型动态规划.背包型动态规划;
//题目
/*
* 给定N个正整数 -- A0 -----AN-1
* 一个正整数Target
* 求存在多少个组合加起来是target
* 每个Ai只能够使用一次。
* */

//计数型背包

//算法思想
/*
* 动态规划组成部分1：状态的确定
* 最后一步--最后一个物品(重量An-1)是否进入背包
* 情况1--[最后一个物品不进入背包] -- 如果前N-1个物品能拼出W的组合有x个，当然前N个物品也能够拼出W的组合有x个
* 情况2--[最后一个物品进入背包] -- 如果前N-1个物品能拼出W-(An-1)的组合有y个,再加上最后的物品An-1拼出W的组合有y个
* 情况1的个数+情况2的个数 = 用前N个物品拼出W的方式
*
* 转移方程f[i][w] = f[i-1][w] + f[i-1][w-Ai-1]
*
* 初始条件
* f[0][0] = 1 -- 0个物品存在一种方式拼出重量0
* f[0][1……M] = 0 -- 0个物品不能拼出大于0的重量
* */
public class BackPackV {
    //代码同BackPack类似，所以此处不进行填写。
    public int backPackV(int[]A ,int m)
    {
        return 0;
    }

}
